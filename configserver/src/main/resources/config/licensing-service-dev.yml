client-id: licensing-service
resource-url: http://localhost:8080/realms/security-licensing-service/protocol/openid-connect/token
grant-type: password

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    #url: jdbc:postgresql://database:5432/license-service
    url: jdbc:postgresql://localhost:5432/license-service
    username: postgres
    password: 123456
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: licensing-service
            authorization-grant-type: authorization_code
            scope: openid

        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/security-licensing-service
            user-name-attribute: preferred_username

      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/security-licensing-service

  #security:
    #oauth2:
      #resourceserver:
        #jwt:
          #issuer-uri: http://localhost:8080/realms/security-licensing-service
          #issuer-uri: http://keycloak:8080/realms/security-licensing-service
          #jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

#jwt:
  #auth:
    #converter:
      #resource-id: licensing-service
      #principle-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true

server:
  port: 8081

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    service-url:
      #defaultZone: http://eurekaserver:8070/eureka/
      defaultZone: http://localhost:8070/eureka/

