spring:
  main:
    allow-bean-definition-overriding: true
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/licensing_service
    username: postgres
    password: 123456
  jpa:
    hibernate:
      ddl-auto: none
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  application:
    name: licensing-service

  profiles:
    active: dev

  config:
    import: optional:configserver:http://localhost:8071

logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.example: DEBUG

management.endpoints.enabled-by-default: false
management.endpoint.health:
  enabled: true
  show-details: always

resilience4j.circuitbreaker:
  instances:
    licenseService:
      registerHealthIndicator: true
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
    organizationService:
      registerHealthIndicator: true
      waitDurationInOpenState: 20s
      failureRateThreshold: 60

resilience4j.ratelimiter:
  instances:
    licenseService:
      limitForPeriod: 5
      limitRefreshPeriod: 5000
      timeoutDuration: 1000ms

resilience4j.retry:
  instances:
    retryLicenseService:
      waitDuration: 10000
      retry-exceptions:
        - java.util.concurrent.TimeoutException

resilience4j.bulkhead:
  instances:
    bulkheadLicenseService:
      maxWaitDuration: 2ms
      maxConcurrentCalls: 20


resilience4j.thread-pool-bulkhead:
  instances:
    bulkheadLicenseService:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1