services:
  database:
    image: postgres:latest

    container_name: postgres

    ports:
      - "5432:5432"

    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123456"
      POSTGRES_DB: "licensing_service"

    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql

    networks:
      backend:
        aliases:
          - "database"

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  config-server:
    image: docker.io/library/config-server:0.0.1-SNAPSHOT

    container_name: configServer

    ports:
      - "8071:8071"

    environment:
      ENCRYPT_KEY: "123456"

    networks:
      backend:
        aliases:
          - "config-server"

  eureka-server:
    image: docker.io/library/eureka-server:0.0.1-SNAPSHOT

    container_name: eurekaServer

    ports:
      - "8070:8070"

    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started

    networks:
      backend:
        aliases:
          - "eureka-server"

  gateway-server:
    image: docker.io/library/gateway-server:0.0.1-SNAPSHOT

    container_name: gatewayServer

    ports:
      - "8072:8072"

    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://configserver:8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"

    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started

    networks:
      backend:
        aliases:
          - "gateway-server"

  zookeeper:
    image: wurstmeister/zookeeper:latest

    container_name: zookeeper

    ports:
      - 2181:2181

    networks:
      backend:
        aliases:
          - "zookeeper"

  kafka-server:
    image: wurstmeister/kafka:latest

    container_name: kafka

    ports:
      - 9092:9092

    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

    depends_on:
      - zookeeper

    networks:
      backend:
        aliases:
          - "kafka"

  redis-server:
    image: redis:alpine

    container_name: redis

    ports:
      - 6379:6379

    networks:
      backend:
        aliases:
          - "redis"

  licensing-service:
    image: docker.io/library/licensing-service:0.0.1-SNAPSHOT

    container_name: licensingService

    ports:
      - "8080:8080"

    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"

    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      kafka-server:
        condition: service_started

    networks:
      - backend

  organization-service:
    image: docker.io/library/organization-service:0.0.1-SNAPSHOT

    container_name: organizationService

    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"

    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      kafka-server:
        condition: service_started

    ports:
      - "8081:8081"

    networks:
      - backend

  keycloak:
    image: jboss/keycloak
    restart: always
    environment:
      KEYCLOAK_VERSION: 6.0.1
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    volumes:
      - ./realm-export.json:/opt/jboss/keycloak/realm-export.json
    command:
      - "-b 0.0.0.0"
      - "-Dkeycloak.import=/opt/jboss/keycloak/realm-export.json"
      - "-Dkeycloak.profile.feature.scripts=enabled"
      - "-Dkeycloak.profile.feature.upload_scripts=enabled"
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "keycloak"

networks:
  backend:
    driver: bridge